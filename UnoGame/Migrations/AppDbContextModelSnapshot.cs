// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnoGame.DAL;

#nullable disable

namespace UnoGame.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("UnoGame.DAL.Entity.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlayerHandId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CardId");

                    b.HasIndex("PlayerHandId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.GameEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NumberOfPlayers")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerId");

                    b.HasIndex("GameId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.PlayerHand", b =>
                {
                    b.Property<int>("PlayerHandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerHandId");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("PlayerHands");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.PlayerHandSummary", b =>
                {
                    b.Property<int>("PlayerHandSummaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("GameId")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalCards")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerHandSummaryId");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerHandSummaries");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.Card", b =>
                {
                    b.HasOne("UnoGame.DAL.Entity.PlayerHand", null)
                        .WithMany("Cards")
                        .HasForeignKey("PlayerHandId");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.Player", b =>
                {
                    b.HasOne("UnoGame.DAL.Entity.GameEntity", "Game")
                        .WithMany("Players")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.PlayerHand", b =>
                {
                    b.HasOne("UnoGame.DAL.Entity.Player", "Player")
                        .WithOne("Hand")
                        .HasForeignKey("UnoGame.DAL.Entity.PlayerHand", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.PlayerHandSummary", b =>
                {
                    b.HasOne("UnoGame.DAL.Entity.GameEntity", "Game")
                        .WithMany("PlayerHandSummaries")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UnoGame.DAL.Entity.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.GameEntity", b =>
                {
                    b.Navigation("PlayerHandSummaries");

                    b.Navigation("Players");
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.Player", b =>
                {
                    b.Navigation("Hand")
                        .IsRequired();
                });

            modelBuilder.Entity("UnoGame.DAL.Entity.PlayerHand", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
